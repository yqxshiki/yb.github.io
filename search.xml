<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git-bash基础命令行使用]]></title>
    <url>%2F2019%2F10%2F08%2Fgit-bash%2F</url>
    <content type="text"><![CDATA[在注册使用了github后，我们也应该学会使用git 来提交管理代码 git介绍是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理 git常用命令 配置git 用户名和密码 123git config --global user.name xxx(用户名)git confit --global user.email xxx(邮箱) 查看当前git的配置 1git config --list 初始化git 仓库 1git init 查看当前仓库的状态 1git status 将需要提交的代码文件添加的暂存区 123git add xxx(文件名)git add xxx(文件名) xxx(文件名) 上传多个文件时中间用空格分开git add . (.是提交当前文件夹内的所有文件) 将暂存区中的代码提交到本地仓库，形成一个版本 1git commit -m &quot;备注&quot; 查看本地仓库中的历史提交版本 1git log 将暂存区中文件删除 1git rm --cached xxx(文件名) 用暂存区中的文件覆盖工作目录中的文件 1git checkout --xxx(文件名) 回滚到本地仓库中特定版本并覆盖暂存区和工作目录 123git reset --hard commitID(commitID可以到git log中查看提交编号)如果有版本1，版本2（后提交），当回滚到版本1时版本2会被自动删除。 git 分支相关命令 查看分支 1git branch 创建分支 1git branch xxx(分支名) 切换分支 1git checkout xxx(分支名) 创建并切换分支 1git checkout -b xxx(分支名) 删除分支 1git branch -d xxx(分支名) 强制删除分支 1git branch -D xxx(分支名) 合并分支 1git merge xxx(需要当前主分支上，合并的分支名) git 相关命令 从远程仓库获取代码（拉取所有版本到本地） 1git clone origin 从远程仓库拉取代码（拉取最新版本到本地，开发过程中使用） 1git pull origin master 向远程仓库推送代码 123git push origin master(本地分支名称)：master(远程分支名称)如果本地分支同远程分支名称一样，可以只写一个 删除当前别名所对应的远程仓库地址 1git remote remove origin]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[了解px rpx em rem vw wh]]></title>
    <url>%2F2019%2F09%2F24%2Fpixel%2F</url>
    <content type="text"><![CDATA[pxpx是pixel的缩写,像素是指基本原色素及其灰度的基本编码。px是相对长度单位，在一般的开发情况下，我们选择px，但是并不是所有情况都用px来解决问题 rpxrpx主要收用于在做微信小程序开发时用到的一种单位,它能够在不同手机上面自适应屏幕尺寸. 在css中px 为css像素也叫逻辑像素;设备像素是设备屏幕的物理像素，任何设备的物理像素的数量都是固定的, DPRDPR是设备像素比,在默认缩放为100%的情况下，设备像素和逻辑像素的比值.iphone 6的设备像素为750，而iphone 6的逻辑像素为375 dpr =2,也就是1px =2rpx,因此我们经常在微信小程序里面用iphone 6当模板进行开发. emem也是相对长度单位，相对于对象文字的字体大小，如果没有设置，则默认为浏览器的默认字体大小. em的值是自己字体大小，如果没有设置就是继承父级元素的字体大小，依次向上找，如果打没有设置就是浏览器默认字体大小 remrem 是css3中新增的 (root em)，和em类似都是字体大小。但是它是相对HTML根元素的。当改变根元素的字体大小时，可以同时更改所有的字体大小。 vw–vhvw和vh是视口单位(viewport),就是依据浏览器窗口大小的单位。 1vw=可视窗口的宽度 * 1% 。 1vh=可视窗口的高度 * 1% 。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vue初识--vue指令]]></title>
    <url>%2F2019%2F09%2F18%2FVue%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Vue介绍Vue 是目前主流前端三大框架之一，是一套渐进式框架。他的作者是一位华人-尤雨溪，有中文官方文档Vue中文官方文档 在这里我们选择用CDN的方式来引入 1&lt;script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"&gt;&lt;/script&gt; Vue实例每一个Vue都是通过new Vue开始的 123456789101112let vm =new Vue(&#123; el:"", data:&#123; &#125;, methods:&#123; &#125;, computed:&#123; &#125;&#125;) 在HTML中我们可以使用 这种来插值. v-ifv-if 绑定的值在data中定义,根据定义值的真假来插入或者移除元素 1234567891011&lt;div id="app"&gt; &lt;p v-if="scok"&gt;你能看到我吗？&lt;/p&gt;&lt;/div&gt; let vm =new Vue(&#123; el:"#app", data: &#123; scok:true &#125;&#125;) 当 scok的值为 false null undefined 0 时，都不显示,为移除元素。 v-showv-show 和v-if相识 都是通过判断boolean 来显示或者不显示元素,当定义的值为 false null undefined 0是 ,不显示 12345678910&lt;div id="app"&gt;&lt;p v-show="msg"&gt;你猜你看得到我吗？&lt;/p&gt;&lt;/div&gt;let vm =new Vue(&#123; el:"#app", data:&#123; msg: null &#125;&#125;) v-show 和 v-if 的区别v-show 当不显示时 可以看到是用css 将display:none; 来就行隐藏 v-show 安全性不高，主要用于特殊类型的切换【显示与隐藏】,不适合做后台管理系统 而v-if 本质是移除Dom节点适合后台管理系统安全性比较高 v-modelv-model是数据双向绑定 123456789101112131415161718192021222324252627282930313233343536&lt;div id="app"&gt; &lt;input type="text" v-model="msg"&gt; &#123;&#123;msg&#125;&#125; &lt;hr&gt; &lt;input type="checkbox" name="checkbox" v-model="list"&gt; &#123;&#123;list&#125;&#125; &lt;hr&gt; &lt;input type="radio" value="true" name="radio" v-model="radio"&gt; &lt;label for=""&gt;true&lt;/label&gt; &lt;input type="radio" value="false" name="radio" v-model="radio"&gt; &lt;label for=""&gt;false&lt;/label&gt; &#123;&#123;radio&#125;&#125; &lt;hr&gt; &lt;input type="checkbox" value="apple" v-model="checkboxlist"&gt; &lt;input type="checkbox" value="orange" v-model="checkboxlist"&gt; &lt;input type="checkbox" value="Banana" v-model="checkboxlist"&gt; &#123;&#123;checkboxlist&#125;&#125; &lt;hr&gt; &lt;select v-model="array"&gt; &lt;option&gt;a&lt;/option&gt; &lt;option&gt;b&lt;/option&gt; &lt;option&gt;c&lt;/option&gt; &lt;option&gt;d&lt;/option&gt; &lt;/select&gt; &#123;&#123;array&#125;&#125;&lt;/div&gt; let vm =new Vue(&#123; el:"#app", data:&#123; msg:"", list:true radio:[], checkboxlist: [], array:[] &#125;&#125;) 通过v-model绑定,当用户在input框中输入数据时,会通过 显示出来 当是单选框时要注意，绑定的值要是数组[] 多个复选框时,绑定的值也要是数组[] 下拉列表时,绑定的值也要是数组[] ———————-持续更新中———————-]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用git github hexo 搭建属于自己的个人博客]]></title>
    <url>%2F2019%2F09%2F16%2Fhexo%2F</url>
    <content type="text"><![CDATA[1 安装git之前在学数据库的时候，用的是windows系统,在cmd中敲命令,用得不是很舒服，安装git 下载地址：git 安装：一路next就行 安装好后：打开Git Bash 输入： git version 这样就安装好了 2 安装nodenode是JavaScript的运行环境,其中npm是包管理工具，在之后我们需要利用npm下载一系列的东西 下载地址：node 安装：一路next就行,但在Custom Setup这一步记得选 Add to PATH 安装好后：打开cmd 输入： node -v 这样就安装好了 3 安装hexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 先创建一个文件夹，打开git bash ，然后cd到当前文件夹,运行 这是在全局安装hexocnpm install -g hexo-cli初始化项目 下载需要相应的文件hexo init cnpm install完成以后在文件夹中会获得不少文件 4 和github关联没有注册github的点击这里github,注册一个账号，然后创建一个存储库 在输入Repository name时要注意,名字要与你的github用户名一样，例如：yqxshiki.github.io,前面是你自己的名字后面加上 .github.io ———————-持续更新中———————-]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
